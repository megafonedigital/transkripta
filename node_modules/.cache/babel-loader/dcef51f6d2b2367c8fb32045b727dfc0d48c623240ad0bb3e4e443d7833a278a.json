{"ast":null,"code":"// Configuração de variáveis de ambiente\n// Funciona tanto em desenvolvimento (process.env) quanto em produção (window._env_)\nconst getEnvVar=function(key){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'';// Em produção, as variáveis são injetadas via window._env_\nif(typeof window!=='undefined'&&window._env_){return window._env_[key]||defaultValue;}// Em desenvolvimento, usa process.env\nreturn process.env[key]||defaultValue;};const config={// APIs Externas\nopenai:{apiKey:getEnvVar('REACT_APP_OPENAI_API_KEY'),baseUrl:getEnvVar('REACT_APP_OPENAI_BASE_URL','https://api.openai.com/v1')},// Webhook Configuration\nwebhook:{url:getEnvVar('REACT_APP_WEBHOOK_URL'),secret:getEnvVar('REACT_APP_WEBHOOK_SECRET'),timeout:parseInt(getEnvVar('REACT_APP_WEBHOOK_TIMEOUT','60000'))// ms\n},// Configurações da Aplicação\napp:{name:getEnvVar('REACT_APP_APP_NAME','Transkipta'),version:getEnvVar('REACT_APP_APP_VERSION','2.0.0'),environment:getEnvVar('REACT_APP_ENVIRONMENT','development'),debug:getEnvVar('REACT_APP_DEBUG','false')==='true'},// Configurações de Upload\nupload:{maxFileSize:parseInt(getEnvVar('REACT_APP_MAX_FILE_SIZE','100'))*1024*1024,// MB para bytes\nmaxUploadSize:parseInt(getEnvVar('REACT_APP_MAX_UPLOAD_SIZE','104857600')),// 100MB\nchunkSize:parseInt(getEnvVar('REACT_APP_CHUNK_SIZE','1048576')),// 1MB\nsupportedFormats:getEnvVar('REACT_APP_SUPPORTED_FORMATS','mp4,mp3,wav,m4a,webm').split(',')},// Autenticação\nauth:{jwtSecret:getEnvVar('REACT_APP_JWT_SECRET','default-secret-key'),sessionTimeout:parseInt(getEnvVar('REACT_APP_SESSION_TIMEOUT','3600'))// segundos\n},// Configurações de API\napi:{timeout:parseInt(getEnvVar('REACT_APP_API_TIMEOUT','30000'))// ms\n},// Configurações de Cache\ncache:{duration:parseInt(getEnvVar('REACT_APP_CACHE_DURATION','86400')),// segundos\nenabled:getEnvVar('REACT_APP_ENABLE_CACHE','true')==='true'},// Configurações de UI\nui:{defaultTheme:getEnvVar('REACT_APP_DEFAULT_THEME','light'),enableDarkMode:getEnvVar('REACT_APP_ENABLE_DARK_MODE','true')==='true',defaultLanguage:getEnvVar('REACT_APP_DEFAULT_LANGUAGE','pt-BR')},// Analytics (opcional)\nanalytics:{enabled:getEnvVar('REACT_APP_ENABLE_ANALYTICS','false')==='true',id:getEnvVar('REACT_APP_ANALYTICS_ID')},// Logs\nlogs:{level:getEnvVar('REACT_APP_LOG_LEVEL','info'),enableConsole:getEnvVar('REACT_APP_ENABLE_CONSOLE_LOGS','true')==='true'}};// Validação de configurações obrigatórias\nconst validateConfig=()=>{const requiredKeys=['openai.apiKey','webhook.url','webhook.secret'];const missing=[];requiredKeys.forEach(key=>{const keys=key.split('.');let value=config;for(const k of keys){var _value;value=(_value=value)===null||_value===void 0?void 0:_value[k];}if(!value){missing.push(key);}});if(missing.length>0){console.warn('Configurações obrigatórias não encontradas:',missing);if(config.app.environment==='production'){throw new Error(`Configurações obrigatórias não encontradas: ${missing.join(', ')}`);}}};// Validar configurações na inicialização\nif(config.app.environment==='production'){validateConfig();}// Log de configurações em desenvolvimento\nif(config.app.debug&&config.logs.enableConsole){console.log('Configurações carregadas:',{...config,// Ocultar chaves sensíveis nos logs\nopenai:{...config.openai,apiKey:config.openai.apiKey?'***':undefined},webhook:{...config.webhook,secret:config.webhook.secret?'***':undefined},auth:{...config.auth,jwtSecret:'***'}});}export default config;","map":{"version":3,"names":["getEnvVar","key","defaultValue","arguments","length","undefined","window","_env_","process","env","config","openai","apiKey","baseUrl","webhook","url","secret","timeout","parseInt","app","name","version","environment","debug","upload","maxFileSize","maxUploadSize","chunkSize","supportedFormats","split","auth","jwtSecret","sessionTimeout","api","cache","duration","enabled","ui","defaultTheme","enableDarkMode","defaultLanguage","analytics","id","logs","level","enableConsole","validateConfig","requiredKeys","missing","forEach","keys","value","k","_value","push","console","warn","Error","join","log"],"sources":["C:/Users/Afonso/Desktop/Transkipta/src/config/env.js"],"sourcesContent":["// Configuração de variáveis de ambiente\r\n// Funciona tanto em desenvolvimento (process.env) quanto em produção (window._env_)\r\n\r\nconst getEnvVar = (key, defaultValue = '') => {\r\n  // Em produção, as variáveis são injetadas via window._env_\r\n  if (typeof window !== 'undefined' && window._env_) {\r\n    return window._env_[key] || defaultValue;\r\n  }\r\n  \r\n  // Em desenvolvimento, usa process.env\r\n  return process.env[key] || defaultValue;\r\n};\r\n\r\nconst config = {\r\n  // APIs Externas\r\n  openai: {\r\n    apiKey: getEnvVar('REACT_APP_OPENAI_API_KEY'),\r\n    baseUrl: getEnvVar('REACT_APP_OPENAI_BASE_URL', 'https://api.openai.com/v1'),\r\n  },\r\n  \r\n  // Webhook Configuration\r\n  webhook: {\r\n    url: getEnvVar('REACT_APP_WEBHOOK_URL'),\r\n    secret: getEnvVar('REACT_APP_WEBHOOK_SECRET'),\r\n    timeout: parseInt(getEnvVar('REACT_APP_WEBHOOK_TIMEOUT', '60000')), // ms\r\n  },\r\n  \r\n  // Configurações da Aplicação\r\n  app: {\r\n    name: getEnvVar('REACT_APP_APP_NAME', 'Transkipta'),\r\n    version: getEnvVar('REACT_APP_APP_VERSION', '2.0.0'),\r\n    environment: getEnvVar('REACT_APP_ENVIRONMENT', 'development'),\r\n    debug: getEnvVar('REACT_APP_DEBUG', 'false') === 'true',\r\n  },\r\n  \r\n  // Configurações de Upload\r\n  upload: {\r\n    maxFileSize: parseInt(getEnvVar('REACT_APP_MAX_FILE_SIZE', '100')) * 1024 * 1024, // MB para bytes\r\n    maxUploadSize: parseInt(getEnvVar('REACT_APP_MAX_UPLOAD_SIZE', '104857600')), // 100MB\r\n    chunkSize: parseInt(getEnvVar('REACT_APP_CHUNK_SIZE', '1048576')), // 1MB\r\n    supportedFormats: getEnvVar('REACT_APP_SUPPORTED_FORMATS', 'mp4,mp3,wav,m4a,webm').split(','),\r\n  },\r\n  \r\n  // Autenticação\r\n  auth: {\r\n    jwtSecret: getEnvVar('REACT_APP_JWT_SECRET', 'default-secret-key'),\r\n    sessionTimeout: parseInt(getEnvVar('REACT_APP_SESSION_TIMEOUT', '3600')), // segundos\r\n  },\r\n  \r\n  // Configurações de API\r\n  api: {\r\n    timeout: parseInt(getEnvVar('REACT_APP_API_TIMEOUT', '30000')), // ms\r\n  },\r\n  \r\n  // Configurações de Cache\r\n  cache: {\r\n    duration: parseInt(getEnvVar('REACT_APP_CACHE_DURATION', '86400')), // segundos\r\n    enabled: getEnvVar('REACT_APP_ENABLE_CACHE', 'true') === 'true',\r\n  },\r\n  \r\n  // Configurações de UI\r\n  ui: {\r\n    defaultTheme: getEnvVar('REACT_APP_DEFAULT_THEME', 'light'),\r\n    enableDarkMode: getEnvVar('REACT_APP_ENABLE_DARK_MODE', 'true') === 'true',\r\n    defaultLanguage: getEnvVar('REACT_APP_DEFAULT_LANGUAGE', 'pt-BR'),\r\n  },\r\n  \r\n  // Analytics (opcional)\r\n  analytics: {\r\n    enabled: getEnvVar('REACT_APP_ENABLE_ANALYTICS', 'false') === 'true',\r\n    id: getEnvVar('REACT_APP_ANALYTICS_ID'),\r\n  },\r\n  \r\n  // Logs\r\n  logs: {\r\n    level: getEnvVar('REACT_APP_LOG_LEVEL', 'info'),\r\n    enableConsole: getEnvVar('REACT_APP_ENABLE_CONSOLE_LOGS', 'true') === 'true',\r\n  },\r\n};\r\n\r\n// Validação de configurações obrigatórias\r\nconst validateConfig = () => {\r\n  const requiredKeys = [\r\n    'openai.apiKey',\r\n    'webhook.url',\r\n    'webhook.secret',\r\n  ];\r\n  \r\n  const missing = [];\r\n  \r\n  requiredKeys.forEach(key => {\r\n    const keys = key.split('.');\r\n    let value = config;\r\n    \r\n    for (const k of keys) {\r\n      value = value?.[k];\r\n    }\r\n    \r\n    if (!value) {\r\n      missing.push(key);\r\n    }\r\n  });\r\n  \r\n  if (missing.length > 0) {\r\n    console.warn('Configurações obrigatórias não encontradas:', missing);\r\n    \r\n    if (config.app.environment === 'production') {\r\n      throw new Error(`Configurações obrigatórias não encontradas: ${missing.join(', ')}`);\r\n    }\r\n  }\r\n};\r\n\r\n// Validar configurações na inicialização\r\nif (config.app.environment === 'production') {\r\n  validateConfig();\r\n}\r\n\r\n// Log de configurações em desenvolvimento\r\nif (config.app.debug && config.logs.enableConsole) {\r\n  console.log('Configurações carregadas:', {\r\n    ...config,\r\n    // Ocultar chaves sensíveis nos logs\r\n    openai: { ...config.openai, apiKey: config.openai.apiKey ? '***' : undefined },\r\n    webhook: { ...config.webhook, secret: config.webhook.secret ? '***' : undefined },\r\n    auth: { ...config.auth, jwtSecret: '***' },\r\n  });\r\n}\r\n\r\nexport default config;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}