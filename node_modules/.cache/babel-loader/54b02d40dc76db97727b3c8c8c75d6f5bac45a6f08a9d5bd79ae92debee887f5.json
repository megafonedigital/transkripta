{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Afonso\\\\Desktop\\\\Transkipta\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login as authLogin, logout as authLogout, getCurrentUser, isAuthenticated, getToken, refreshSession } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const currentUser = getCurrentUser();\n        const currentToken = getToken();\n        if (currentUser && currentToken) {\n          setUser(currentUser);\n          setToken(currentToken);\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n\n    // Set up session refresh interval\n    const refreshInterval = setInterval(() => {\n      if (isAuthenticated()) {\n        refreshSession();\n      }\n    }, 5 * 60 * 1000); // Refresh every 5 minutes\n\n    return () => clearInterval(refreshInterval);\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await authLogin(username, password);\n      setToken(response.token);\n      setUser(response.user);\n      return {\n        success: true\n      };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return {\n        success: false,\n        error: error.message || 'Login failed'\n      };\n    }\n  };\n  const logout = () => {\n    authLogout();\n    setToken(null);\n    setUser(null);\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated: isAuthenticated(),\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"s3+shCSR/t4KywrfJXNOwwFNgWM=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","authLogin","logout","authLogout","getCurrentUser","isAuthenticated","getToken","refreshSession","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","initAuth","currentUser","currentToken","error","console","refreshInterval","setInterval","clearInterval","username","password","response","success","message","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Afonso/Desktop/Transkipta/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  login as authLogin, \n  logout as authLogout, \n  getCurrentUser, \n  isAuthenticated,\n  getToken,\n  refreshSession\n} from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const currentUser = getCurrentUser();\n        const currentToken = getToken();\n        \n        if (currentUser && currentToken) {\n          setUser(currentUser);\n          setToken(currentToken);\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n    \n    // Set up session refresh interval\n    const refreshInterval = setInterval(() => {\n      if (isAuthenticated()) {\n        refreshSession();\n      }\n    }, 5 * 60 * 1000); // Refresh every 5 minutes\n    \n    return () => clearInterval(refreshInterval);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await authLogin(username, password);\n      \n      setToken(response.token);\n      setUser(response.user);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { \n        success: false, \n        error: error.message || 'Login failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    authLogout();\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated: isAuthenticated(),\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SACEC,KAAK,IAAIC,SAAS,EAClBC,MAAM,IAAIC,UAAU,EACpBC,cAAc,EACdC,eAAe,EACfC,QAAQ,EACRC,cAAc,QACT,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,WAAW,gBAAGd,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMe,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGhB,UAAU,CAACa,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACwB,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMyB,QAAQ,GAAGA,CAAA,KAAM;MACrB,IAAI;QACF,MAAMC,WAAW,GAAGrB,cAAc,CAAC,CAAC;QACpC,MAAMsB,YAAY,GAAGpB,QAAQ,CAAC,CAAC;QAE/B,IAAImB,WAAW,IAAIC,YAAY,EAAE;UAC/BP,OAAO,CAACM,WAAW,CAAC;UACpBF,QAAQ,CAACG,YAAY,CAAC;QACxB;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD,CAAC,SAAS;QACRN,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,QAAQ,CAAC,CAAC;;IAEV;IACA,MAAMK,eAAe,GAAGC,WAAW,CAAC,MAAM;MACxC,IAAIzB,eAAe,CAAC,CAAC,EAAE;QACrBE,cAAc,CAAC,CAAC;MAClB;IACF,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEnB,OAAO,MAAMwB,aAAa,CAACF,eAAe,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM7B,KAAK,GAAG,MAAAA,CAAOgC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjC,SAAS,CAAC+B,QAAQ,EAAEC,QAAQ,CAAC;MAEpDV,QAAQ,CAACW,QAAQ,CAACZ,KAAK,CAAC;MACxBH,OAAO,CAACe,QAAQ,CAAChB,IAAI,CAAC;MAEtB,OAAO;QAAEiB,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,OAAO;QACLQ,OAAO,EAAE,KAAK;QACdR,KAAK,EAAEA,KAAK,CAACS,OAAO,IAAI;MAC1B,CAAC;IACH;EACF,CAAC;EAED,MAAMlC,MAAM,GAAGA,CAAA,KAAM;IACnBC,UAAU,CAAC,CAAC;IACZoB,QAAQ,CAAC,IAAI,CAAC;IACdJ,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMkB,KAAK,GAAG;IACZnB,IAAI;IACJI,KAAK;IACLF,OAAO;IACPf,eAAe,EAAEA,eAAe,CAAC,CAAC;IAClCL,KAAK;IACLE;EACF,CAAC;EAED,oBAAOO,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAArB,QAAA,EAAEA;EAAQ;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACzB,GAAA,CAnEWF,YAAY;AAAA4B,EAAA,GAAZ5B,YAAY;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}