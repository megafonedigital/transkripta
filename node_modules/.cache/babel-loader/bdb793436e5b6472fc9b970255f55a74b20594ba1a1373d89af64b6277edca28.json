{"ast":null,"code":"// Configuração de variáveis de ambiente\n// Funciona tanto em desenvolvimento (process.env) quanto em produção (window._env_)\n\nconst getEnvVar = (key, defaultValue = '') => {\n  // Em produção, as variáveis são injetadas via window._env_\n  if (typeof window !== 'undefined' && window._env_) {\n    return window._env_[key] || defaultValue;\n  }\n\n  // Em desenvolvimento, usa process.env\n  return process.env[key] || defaultValue;\n};\nconst config = {\n  // APIs Externas\n  openai: {\n    apiKey: getEnvVar('REACT_APP_OPENAI_API_KEY'),\n    baseUrl: getEnvVar('REACT_APP_OPENAI_BASE_URL', 'https://api.openai.com/v1')\n  },\n  // Webhook Configuration\n  webhook: {\n    url: getEnvVar('REACT_APP_WEBHOOK_URL'),\n    secret: getEnvVar('REACT_APP_WEBHOOK_SECRET'),\n    timeout: parseInt(getEnvVar('REACT_APP_WEBHOOK_TIMEOUT', '60000')) // ms\n  },\n  // Configurações da Aplicação\n  app: {\n    name: getEnvVar('REACT_APP_APP_NAME', 'Transkipta'),\n    version: getEnvVar('REACT_APP_APP_VERSION', '2.0.0'),\n    environment: getEnvVar('REACT_APP_ENVIRONMENT', 'development'),\n    debug: getEnvVar('REACT_APP_DEBUG', 'false') === 'true'\n  },\n  // Configurações de Upload\n  upload: {\n    maxFileSize: parseInt(getEnvVar('REACT_APP_MAX_FILE_SIZE', '100')) * 1024 * 1024,\n    // MB para bytes\n    maxUploadSize: parseInt(getEnvVar('REACT_APP_MAX_UPLOAD_SIZE', '104857600')),\n    // 100MB\n    chunkSize: parseInt(getEnvVar('REACT_APP_CHUNK_SIZE', '1048576')),\n    // 1MB\n    supportedFormats: getEnvVar('REACT_APP_SUPPORTED_FORMATS', 'mp4,mp3,wav,m4a,webm').split(',')\n  },\n  // Autenticação\n  auth: {\n    jwtSecret: getEnvVar('REACT_APP_JWT_SECRET', 'default-secret-key'),\n    sessionTimeout: parseInt(getEnvVar('REACT_APP_SESSION_TIMEOUT', '3600')) // segundos\n  },\n  // Configurações de API\n  api: {\n    timeout: parseInt(getEnvVar('REACT_APP_API_TIMEOUT', '120000')) // ms\n  },\n  // Configurações de Cache\n  cache: {\n    duration: parseInt(getEnvVar('REACT_APP_CACHE_DURATION', '86400')),\n    // segundos\n    enabled: getEnvVar('REACT_APP_ENABLE_CACHE', 'true') === 'true'\n  },\n  // Configurações de UI\n  ui: {\n    defaultTheme: getEnvVar('REACT_APP_DEFAULT_THEME', 'light'),\n    enableDarkMode: getEnvVar('REACT_APP_ENABLE_DARK_MODE', 'true') === 'true',\n    defaultLanguage: getEnvVar('REACT_APP_DEFAULT_LANGUAGE', 'pt-BR')\n  },\n  // Analytics (opcional)\n  analytics: {\n    enabled: getEnvVar('REACT_APP_ENABLE_ANALYTICS', 'false') === 'true',\n    id: getEnvVar('REACT_APP_ANALYTICS_ID')\n  },\n  // Logs\n  logs: {\n    level: getEnvVar('REACT_APP_LOG_LEVEL', 'info'),\n    enableConsole: getEnvVar('REACT_APP_ENABLE_CONSOLE_LOGS', 'true') === 'true'\n  }\n};\n\n// Validação de configurações obrigatórias\nconst validateConfig = () => {\n  const requiredKeys = ['openai.apiKey', 'webhook.url', 'webhook.secret'];\n  const missing = [];\n  requiredKeys.forEach(key => {\n    const keys = key.split('.');\n    let value = config;\n    for (const k of keys) {\n      var _value;\n      value = (_value = value) === null || _value === void 0 ? void 0 : _value[k];\n    }\n    if (!value) {\n      missing.push(key);\n    }\n  });\n  if (missing.length > 0) {\n    console.warn('Configurações obrigatórias não encontradas:', missing);\n    if (config.app.environment === 'production') {\n      throw new Error(`Configurações obrigatórias não encontradas: ${missing.join(', ')}`);\n    }\n  }\n};\n\n// Validar configurações na inicialização\nif (config.app.environment === 'production') {\n  validateConfig();\n}\n\n// Log de configurações em desenvolvimento\nif (config.app.debug && config.logs.enableConsole) {\n  console.log('Configurações carregadas:', {\n    ...config,\n    // Ocultar chaves sensíveis nos logs\n    openai: {\n      ...config.openai,\n      apiKey: config.openai.apiKey ? '***' : undefined\n    },\n    webhook: {\n      ...config.webhook,\n      secret: config.webhook.secret ? '***' : undefined\n    },\n    auth: {\n      ...config.auth,\n      jwtSecret: '***'\n    }\n  });\n}\nexport default config;","map":{"version":3,"names":["getEnvVar","key","defaultValue","window","_env_","process","env","config","openai","apiKey","baseUrl","webhook","url","secret","timeout","parseInt","app","name","version","environment","debug","upload","maxFileSize","maxUploadSize","chunkSize","supportedFormats","split","auth","jwtSecret","sessionTimeout","api","cache","duration","enabled","ui","defaultTheme","enableDarkMode","defaultLanguage","analytics","id","logs","level","enableConsole","validateConfig","requiredKeys","missing","forEach","keys","value","k","_value","push","length","console","warn","Error","join","log","undefined"],"sources":["C:/Users/Afonso/Desktop/Transkipta/src/config/env.js"],"sourcesContent":["// Configuração de variáveis de ambiente\r\n// Funciona tanto em desenvolvimento (process.env) quanto em produção (window._env_)\r\n\r\nconst getEnvVar = (key, defaultValue = '') => {\r\n  // Em produção, as variáveis são injetadas via window._env_\r\n  if (typeof window !== 'undefined' && window._env_) {\r\n    return window._env_[key] || defaultValue;\r\n  }\r\n  \r\n  // Em desenvolvimento, usa process.env\r\n  return process.env[key] || defaultValue;\r\n};\r\n\r\nconst config = {\r\n  // APIs Externas\r\n  openai: {\r\n    apiKey: getEnvVar('REACT_APP_OPENAI_API_KEY'),\r\n    baseUrl: getEnvVar('REACT_APP_OPENAI_BASE_URL', 'https://api.openai.com/v1'),\r\n  },\r\n  \r\n  // Webhook Configuration\r\n  webhook: {\r\n    url: getEnvVar('REACT_APP_WEBHOOK_URL'),\r\n    secret: getEnvVar('REACT_APP_WEBHOOK_SECRET'),\r\n    timeout: parseInt(getEnvVar('REACT_APP_WEBHOOK_TIMEOUT', '60000')), // ms\r\n  },\r\n  \r\n  // Configurações da Aplicação\r\n  app: {\r\n    name: getEnvVar('REACT_APP_APP_NAME', 'Transkipta'),\r\n    version: getEnvVar('REACT_APP_APP_VERSION', '2.0.0'),\r\n    environment: getEnvVar('REACT_APP_ENVIRONMENT', 'development'),\r\n    debug: getEnvVar('REACT_APP_DEBUG', 'false') === 'true',\r\n  },\r\n  \r\n  // Configurações de Upload\r\n  upload: {\r\n    maxFileSize: parseInt(getEnvVar('REACT_APP_MAX_FILE_SIZE', '100')) * 1024 * 1024, // MB para bytes\r\n    maxUploadSize: parseInt(getEnvVar('REACT_APP_MAX_UPLOAD_SIZE', '104857600')), // 100MB\r\n    chunkSize: parseInt(getEnvVar('REACT_APP_CHUNK_SIZE', '1048576')), // 1MB\r\n    supportedFormats: getEnvVar('REACT_APP_SUPPORTED_FORMATS', 'mp4,mp3,wav,m4a,webm').split(','),\r\n  },\r\n  \r\n  // Autenticação\r\n  auth: {\r\n    jwtSecret: getEnvVar('REACT_APP_JWT_SECRET', 'default-secret-key'),\r\n    sessionTimeout: parseInt(getEnvVar('REACT_APP_SESSION_TIMEOUT', '3600')), // segundos\r\n  },\r\n  \r\n  // Configurações de API\r\n  api: {\r\n    timeout: parseInt(getEnvVar('REACT_APP_API_TIMEOUT', '120000')), // ms\r\n  },\r\n  \r\n  // Configurações de Cache\r\n  cache: {\r\n    duration: parseInt(getEnvVar('REACT_APP_CACHE_DURATION', '86400')), // segundos\r\n    enabled: getEnvVar('REACT_APP_ENABLE_CACHE', 'true') === 'true',\r\n  },\r\n  \r\n  // Configurações de UI\r\n  ui: {\r\n    defaultTheme: getEnvVar('REACT_APP_DEFAULT_THEME', 'light'),\r\n    enableDarkMode: getEnvVar('REACT_APP_ENABLE_DARK_MODE', 'true') === 'true',\r\n    defaultLanguage: getEnvVar('REACT_APP_DEFAULT_LANGUAGE', 'pt-BR'),\r\n  },\r\n  \r\n  // Analytics (opcional)\r\n  analytics: {\r\n    enabled: getEnvVar('REACT_APP_ENABLE_ANALYTICS', 'false') === 'true',\r\n    id: getEnvVar('REACT_APP_ANALYTICS_ID'),\r\n  },\r\n  \r\n  // Logs\r\n  logs: {\r\n    level: getEnvVar('REACT_APP_LOG_LEVEL', 'info'),\r\n    enableConsole: getEnvVar('REACT_APP_ENABLE_CONSOLE_LOGS', 'true') === 'true',\r\n  },\r\n};\r\n\r\n// Validação de configurações obrigatórias\r\nconst validateConfig = () => {\r\n  const requiredKeys = [\r\n    'openai.apiKey',\r\n    'webhook.url',\r\n    'webhook.secret',\r\n  ];\r\n  \r\n  const missing = [];\r\n  \r\n  requiredKeys.forEach(key => {\r\n    const keys = key.split('.');\r\n    let value = config;\r\n    \r\n    for (const k of keys) {\r\n      value = value?.[k];\r\n    }\r\n    \r\n    if (!value) {\r\n      missing.push(key);\r\n    }\r\n  });\r\n  \r\n  if (missing.length > 0) {\r\n    console.warn('Configurações obrigatórias não encontradas:', missing);\r\n    \r\n    if (config.app.environment === 'production') {\r\n      throw new Error(`Configurações obrigatórias não encontradas: ${missing.join(', ')}`);\r\n    }\r\n  }\r\n};\r\n\r\n// Validar configurações na inicialização\r\nif (config.app.environment === 'production') {\r\n  validateConfig();\r\n}\r\n\r\n// Log de configurações em desenvolvimento\r\nif (config.app.debug && config.logs.enableConsole) {\r\n  console.log('Configurações carregadas:', {\r\n    ...config,\r\n    // Ocultar chaves sensíveis nos logs\r\n    openai: { ...config.openai, apiKey: config.openai.apiKey ? '***' : undefined },\r\n    webhook: { ...config.webhook, secret: config.webhook.secret ? '***' : undefined },\r\n    auth: { ...config.auth, jwtSecret: '***' },\r\n  });\r\n}\r\n\r\nexport default config;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}