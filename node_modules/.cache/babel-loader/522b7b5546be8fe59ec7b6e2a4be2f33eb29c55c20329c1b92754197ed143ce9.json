{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'../context/AuthContext';import{getMetrics,getTranscriptions}from'../services/storageService';import{ClockIcon,DocumentTextIcon,CurrencyDollarIcon,ChartBarIcon}from'@heroicons/react/24/outline';import{Chart as ChartJS,CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend,Filler}from'chart.js';import{Line,Bar}from'react-chartjs-2';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,PointElement,LineElement,BarElement,Title,Tooltip,Legend,Filler);const Metrics=()=>{const{token}=useAuth();const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[metrics,setMetrics]=useState({totalTranscriptions:0,totalDuration:0,totalCostUsd:0,totalCostBrl:0,typeDistribution:{},dailyStats:[],monthlyStats:[]});const[timeRange,setTimeRange]=useState('daily');useEffect(()=>{loadMetrics();},[timeRange]);const loadMetrics=async()=>{try{setLoading(true);// Get metrics from storage\nconst metricsData=getMetrics();const transcriptions=getTranscriptions();// Calculate metrics from transcriptions\nconst calculatedMetrics=calculateMetricsFromData(transcriptions,metricsData);setMetrics(calculatedMetrics);}catch(err){console.error('Error loading metrics:',err);setError('Erro ao carregar métricas');}finally{setLoading(false);}};const calculateMetricsFromData=(transcriptions,metricsData)=>{const now=new Date();const thirtyDaysAgo=new Date(now.getTime()-30*24*60*60*1000);// Filter recent transcriptions\nconst recentTranscriptions=transcriptions.filter(t=>new Date(t.createdAt)>=thirtyDaysAgo);// Calculate totals\nconst totalTranscriptions=transcriptions.length;const totalDuration=transcriptions.reduce((sum,t)=>sum+(t.duration||0),0);const totalWords=transcriptions.reduce((sum,t)=>sum+(t.wordCount||0),0);// Estimate costs (approximate values)\nconst costPerMinute=0.006;// OpenAI Whisper pricing\nconst totalCostUsd=totalDuration/60*costPerMinute;const totalCostBrl=totalCostUsd*5.2;// Approximate USD to BRL\n// Type distribution\nconst typeDistribution=transcriptions.reduce((acc,t)=>{acc[t.type]=(acc[t.type]||0)+1;return acc;},{});// Daily stats for the last 30 days\nconst dailyStats=[];for(let i=29;i>=0;i--){const date=new Date(now.getTime()-i*24*60*60*1000);const dateStr=date.toISOString().split('T')[0];const dayTranscriptions=transcriptions.filter(t=>t.createdAt.split('T')[0]===dateStr);dailyStats.push({date:dateStr,transcriptions:dayTranscriptions.length,duration:dayTranscriptions.reduce((sum,t)=>sum+(t.duration||0),0),cost:dayTranscriptions.reduce((sum,t)=>sum+(t.duration||0),0)/60*costPerMinute});}// Monthly stats for the last 12 months\nconst monthlyStats=[];for(let i=11;i>=0;i--){const date=new Date(now.getFullYear(),now.getMonth()-i,1);const monthStr=`${date.getFullYear()}-${String(date.getMonth()+1).padStart(2,'0')}`;const monthTranscriptions=transcriptions.filter(t=>t.createdAt.substring(0,7)===monthStr);monthlyStats.push({month:monthStr,transcriptions:monthTranscriptions.length,duration:monthTranscriptions.reduce((sum,t)=>sum+(t.duration||0),0),cost:monthTranscriptions.reduce((sum,t)=>sum+(t.duration||0),0)/60*costPerMinute});}return{totalTranscriptions,totalDuration,totalCostUsd,totalCostBrl,totalWords,typeDistribution,dailyStats,monthlyStats};};const formatDuration=seconds=>{const hours=Math.floor(seconds/3600);const minutes=Math.floor(seconds%3600/60);return`${hours}h ${minutes}m`;};const formatCurrency=function(value){let currency=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'BRL';return new Intl.NumberFormat('pt-BR',{style:'currency',currency:currency}).format(value);};const chartOptions={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'top'},title:{display:true,text:timeRange==='daily'?'Uso Diário':'Uso Mensal'}},scales:{y:{beginAtZero:true}}};const prepareChartData=()=>{const stats=timeRange==='daily'?metrics.dailyStats:metrics.monthlyStats;const labels=stats.map(stat=>stat.date);return{labels,datasets:[{label:'Duração (minutos)',data:stats.map(stat=>Math.round(stat.duration/60)),// Convert seconds to minutes\nborderColor:'rgb(34, 197, 94)',backgroundColor:'rgba(34, 197, 94, 0.1)',fill:true,tension:0.4},{label:'Custo (R$)',data:stats.map(stat=>stat.costBrl),borderColor:'rgb(99, 102, 241)',backgroundColor:'rgba(99, 102, 241, 0.1)',fill:true,tension:0.4}]};};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex justify-center items-center min-h-[400px]\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500\"})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"text-red-500 text-center py-4\",children:error});}return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6 p-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-900 dark:text-white\",children:\"M\\xE9tricas de Uso\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeRange('daily'),className:`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${timeRange==='daily'?'bg-indigo-100 text-indigo-700 dark:bg-indigo-900 dark:text-indigo-200':'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'}`,children:\"Di\\xE1rio\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setTimeRange('monthly'),className:`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${timeRange==='monthly'?'bg-indigo-100 text-indigo-700 dark:bg-indigo-900 dark:text-indigo-200':'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'}`,children:\"Mensal\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(DocumentTextIcon,{className:\"h-8 w-8 text-indigo-500\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Total de Transcri\\xE7\\xF5es\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-semibold text-gray-900 dark:text-white\",children:metrics.totalTranscriptions})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(ClockIcon,{className:\"h-8 w-8 text-green-500\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Tempo Total\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-semibold text-gray-900 dark:text-white\",children:formatDuration(metrics.totalDuration)})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-8 w-8 text-yellow-500\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Custo Total (USD)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-semibold text-gray-900 dark:text-white\",children:formatCurrency(metrics.totalCostUsd||0,'USD')})]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(CurrencyDollarIcon,{className:\"h-8 w-8 text-blue-500\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"ml-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm font-medium text-gray-500 dark:text-gray-400\",children:\"Custo Total (BRL)\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl font-semibold text-gray-900 dark:text-white\",children:formatCurrency(metrics.totalCostBrl||0,'BRL')})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-4\",children:\"Hist\\xF3rico de Uso\"}),/*#__PURE__*/_jsx(\"div\",{className:\"h-80\",children:/*#__PURE__*/_jsx(Line,{options:chartOptions,data:prepareChartData()})})]}),Object.keys(metrics.typeDistribution).length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-900 dark:text-white mb-4\",children:\"Distribui\\xE7\\xE3o por Tipo\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4\",children:Object.entries(metrics.typeDistribution).map(_ref=>{let[type,count]=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 dark:text-gray-400\",children:type}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xl font-semibold text-gray-900 dark:text-white\",children:count})]},type);})})]})]});};export default Metrics;","map":{"version":3,"names":["React","useState","useEffect","useAuth","getMetrics","getTranscriptions","ClockIcon","DocumentTextIcon","CurrencyDollarIcon","ChartBarIcon","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","Filler","Line","Bar","jsx","_jsx","jsxs","_jsxs","register","Metrics","token","loading","setLoading","error","setError","metrics","setMetrics","totalTranscriptions","totalDuration","totalCostUsd","totalCostBrl","typeDistribution","dailyStats","monthlyStats","timeRange","setTimeRange","loadMetrics","metricsData","transcriptions","calculatedMetrics","calculateMetricsFromData","err","console","now","Date","thirtyDaysAgo","getTime","recentTranscriptions","filter","t","createdAt","length","reduce","sum","duration","totalWords","wordCount","costPerMinute","acc","type","i","date","dateStr","toISOString","split","dayTranscriptions","push","cost","getFullYear","getMonth","monthStr","String","padStart","monthTranscriptions","substring","month","formatDuration","seconds","hours","Math","floor","minutes","formatCurrency","value","currency","arguments","undefined","Intl","NumberFormat","style","format","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","scales","y","beginAtZero","prepareChartData","stats","labels","map","stat","datasets","label","data","round","borderColor","backgroundColor","fill","tension","costBrl","className","children","onClick","options","Object","keys","entries","_ref","count"],"sources":["C:/Users/Afonso/Desktop/Transkipta/src/components/Metrics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { getMetrics, getTranscriptions } from '../services/storageService';\r\nimport { \r\n  ClockIcon, \r\n  DocumentTextIcon,\r\n  CurrencyDollarIcon,\r\n  ChartBarIcon\r\n} from '@heroicons/react/24/outline';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n} from 'chart.js';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  Filler\r\n);\r\n\r\nconst Metrics = () => {\r\n  const { token } = useAuth();\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [metrics, setMetrics] = useState({\r\n    totalTranscriptions: 0,\r\n    totalDuration: 0,\r\n    totalCostUsd: 0,\r\n    totalCostBrl: 0,\r\n    typeDistribution: {},\r\n    dailyStats: [],\r\n    monthlyStats: []\r\n  });\r\n\r\n  const [timeRange, setTimeRange] = useState('daily');\r\n\r\n  useEffect(() => {\r\n    loadMetrics();\r\n  }, [timeRange]);\r\n\r\n  const loadMetrics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Get metrics from storage\r\n      const metricsData = getMetrics();\r\n      const transcriptions = getTranscriptions();\r\n      \r\n      // Calculate metrics from transcriptions\r\n      const calculatedMetrics = calculateMetricsFromData(transcriptions, metricsData);\r\n      \r\n      setMetrics(calculatedMetrics);\r\n    } catch (err) {\r\n      console.error('Error loading metrics:', err);\r\n      setError('Erro ao carregar métricas');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  const calculateMetricsFromData = (transcriptions, metricsData) => {\r\n    const now = new Date();\r\n    const thirtyDaysAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n    \r\n    // Filter recent transcriptions\r\n    const recentTranscriptions = transcriptions.filter(t => \r\n      new Date(t.createdAt) >= thirtyDaysAgo\r\n    );\r\n    \r\n    // Calculate totals\r\n    const totalTranscriptions = transcriptions.length;\r\n    const totalDuration = transcriptions.reduce((sum, t) => sum + (t.duration || 0), 0);\r\n    const totalWords = transcriptions.reduce((sum, t) => sum + (t.wordCount || 0), 0);\r\n    \r\n    // Estimate costs (approximate values)\r\n    const costPerMinute = 0.006; // OpenAI Whisper pricing\r\n    const totalCostUsd = (totalDuration / 60) * costPerMinute;\r\n    const totalCostBrl = totalCostUsd * 5.2; // Approximate USD to BRL\r\n    \r\n    // Type distribution\r\n    const typeDistribution = transcriptions.reduce((acc, t) => {\r\n      acc[t.type] = (acc[t.type] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    \r\n    // Daily stats for the last 30 days\r\n    const dailyStats = [];\r\n    for (let i = 29; i >= 0; i--) {\r\n      const date = new Date(now.getTime() - i * 24 * 60 * 60 * 1000);\r\n      const dateStr = date.toISOString().split('T')[0];\r\n      \r\n      const dayTranscriptions = transcriptions.filter(t => \r\n        t.createdAt.split('T')[0] === dateStr\r\n      );\r\n      \r\n      dailyStats.push({\r\n        date: dateStr,\r\n        transcriptions: dayTranscriptions.length,\r\n        duration: dayTranscriptions.reduce((sum, t) => sum + (t.duration || 0), 0),\r\n        cost: (dayTranscriptions.reduce((sum, t) => sum + (t.duration || 0), 0) / 60) * costPerMinute\r\n      });\r\n    }\r\n    \r\n    // Monthly stats for the last 12 months\r\n    const monthlyStats = [];\r\n    for (let i = 11; i >= 0; i--) {\r\n      const date = new Date(now.getFullYear(), now.getMonth() - i, 1);\r\n      const monthStr = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\r\n      \r\n      const monthTranscriptions = transcriptions.filter(t => \r\n        t.createdAt.substring(0, 7) === monthStr\r\n      );\r\n      \r\n      monthlyStats.push({\r\n        month: monthStr,\r\n        transcriptions: monthTranscriptions.length,\r\n        duration: monthTranscriptions.reduce((sum, t) => sum + (t.duration || 0), 0),\r\n        cost: (monthTranscriptions.reduce((sum, t) => sum + (t.duration || 0), 0) / 60) * costPerMinute\r\n      });\r\n    }\r\n    \r\n    return {\r\n      totalTranscriptions,\r\n      totalDuration,\r\n      totalCostUsd,\r\n      totalCostBrl,\r\n      totalWords,\r\n      typeDistribution,\r\n      dailyStats,\r\n      monthlyStats\r\n    };\r\n  };\r\n\r\n  const formatDuration = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    return `${hours}h ${minutes}m`;\r\n  };\r\n\r\n  const formatCurrency = (value, currency = 'BRL') => {\r\n    return new Intl.NumberFormat('pt-BR', {\r\n      style: 'currency',\r\n      currency: currency\r\n    }).format(value);\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: timeRange === 'daily' ? 'Uso Diário' : 'Uso Mensal'\r\n      }\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true\r\n      }\r\n    }\r\n  };\r\n\r\n  const prepareChartData = () => {\r\n    const stats = timeRange === 'daily' ? metrics.dailyStats : metrics.monthlyStats;\r\n    const labels = stats.map(stat => stat.date);\r\n    \r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Duração (minutos)',\r\n          data: stats.map(stat => Math.round(stat.duration / 60)), // Convert seconds to minutes\r\n          borderColor: 'rgb(34, 197, 94)',\r\n          backgroundColor: 'rgba(34, 197, 94, 0.1)',\r\n          fill: true,\r\n          tension: 0.4\r\n        },\r\n        {\r\n          label: 'Custo (R$)',\r\n          data: stats.map(stat => stat.costBrl),\r\n          borderColor: 'rgb(99, 102, 241)',\r\n          backgroundColor: 'rgba(99, 102, 241, 0.1)',\r\n          fill: true,\r\n          tension: 0.4\r\n        }\r\n      ]\r\n    };\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-[400px]\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-indigo-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-red-500 text-center py-4\">{error}</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-6\">\r\n      <div className=\"flex justify-between items-center\">\r\n        <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Métricas de Uso</h2>\r\n        <div className=\"flex space-x-2\">\r\n          <button\r\n            onClick={() => setTimeRange('daily')}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              timeRange === 'daily'\r\n                ? 'bg-indigo-100 text-indigo-700 dark:bg-indigo-900 dark:text-indigo-200'\r\n                : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'\r\n            }`}\r\n          >\r\n            Diário\r\n          </button>\r\n          <button\r\n            onClick={() => setTimeRange('monthly')}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              timeRange === 'monthly'\r\n                ? 'bg-indigo-100 text-indigo-700 dark:bg-indigo-900 dark:text-indigo-200'\r\n                : 'text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'\r\n            }`}\r\n          >\r\n            Mensal\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n          <div className=\"flex items-center\">\r\n            <DocumentTextIcon className=\"h-8 w-8 text-indigo-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Total de Transcrições</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                {metrics.totalTranscriptions}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n          <div className=\"flex items-center\">\r\n            <ClockIcon className=\"h-8 w-8 text-green-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Tempo Total</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                {formatDuration(metrics.totalDuration)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n          <div className=\"flex items-center\">\r\n            <CurrencyDollarIcon className=\"h-8 w-8 text-yellow-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Custo Total (USD)</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                {formatCurrency(metrics.totalCostUsd || 0, 'USD')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n          <div className=\"flex items-center\">\r\n            <CurrencyDollarIcon className=\"h-8 w-8 text-blue-500\" />\r\n            <div className=\"ml-4\">\r\n              <p className=\"text-sm font-medium text-gray-500 dark:text-gray-400\">Custo Total (BRL)</p>\r\n              <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                {formatCurrency(metrics.totalCostBrl || 0, 'BRL')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Histórico de Uso</h3>\r\n        <div className=\"h-80\">\r\n          <Line options={chartOptions} data={prepareChartData()} />\r\n        </div>\r\n      </div>\r\n\r\n      {Object.keys(metrics.typeDistribution).length > 0 && (\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow p-6\">\r\n          <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Distribuição por Tipo</h3>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n            {Object.entries(metrics.typeDistribution).map(([type, count]) => (\r\n              <div key={type} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">{type}</p>\r\n                <p className=\"text-xl font-semibold text-gray-900 dark:text-white\">{count}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Metrics;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}