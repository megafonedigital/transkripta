{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{login as authLogin,logout as authLogout,getCurrentUser,isAuthenticated,getToken,refreshSession}from'../services/authService';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[token,setToken]=useState(null);useEffect(()=>{const initAuth=()=>{try{const currentUser=getCurrentUser();const currentToken=getToken();if(currentUser&&currentToken){setUser(currentUser);setToken(currentToken);}}catch(error){console.error('Auth initialization failed:',error);}finally{setLoading(false);}};initAuth();// Set up session refresh interval\nconst refreshInterval=setInterval(()=>{if(isAuthenticated()){refreshSession();}},5*60*1000);// Refresh every 5 minutes\nreturn()=>clearInterval(refreshInterval);},[]);const login=async(username,password)=>{try{const response=await authLogin(username,password);setToken(response.token);setUser(response.user);return{success:true};}catch(error){console.error('Login failed:',error);return{success:false,error:error.message||'Login failed'};}};const logout=()=>{authLogout();setToken(null);setUser(null);};const value={user,token,loading,isAuthenticated:isAuthenticated(),login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","authLogin","logout","authLogout","getCurrentUser","isAuthenticated","getToken","refreshSession","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","token","setToken","initAuth","currentUser","currentToken","error","console","refreshInterval","setInterval","clearInterval","username","password","response","success","message","value","Provider"],"sources":["C:/Users/Afonso/Desktop/Transkipta/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { \n  login as authLogin, \n  logout as authLogout, \n  getCurrentUser, \n  isAuthenticated,\n  getToken,\n  refreshSession\n} from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(null);\n\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const currentUser = getCurrentUser();\n        const currentToken = getToken();\n        \n        if (currentUser && currentToken) {\n          setUser(currentUser);\n          setToken(currentToken);\n        }\n      } catch (error) {\n        console.error('Auth initialization failed:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n    \n    // Set up session refresh interval\n    const refreshInterval = setInterval(() => {\n      if (isAuthenticated()) {\n        refreshSession();\n      }\n    }, 5 * 60 * 1000); // Refresh every 5 minutes\n    \n    return () => clearInterval(refreshInterval);\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      const response = await authLogin(username, password);\n      \n      setToken(response.token);\n      setUser(response.user);\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login failed:', error);\n      return { \n        success: false, \n        error: error.message || 'Login failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    authLogout();\n    setToken(null);\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    token,\n    loading,\n    isAuthenticated: isAuthenticated(),\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}