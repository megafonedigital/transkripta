{"ast":null,"code":"import axios from'axios';import config from'../config/env';// Configurações das APIs\nconst OPENAI_API_KEY=config.openai.apiKey;const OPENAI_API_URL=config.openai.baseUrl;const RAPIDAPI_KEY=config.rapidapi.key;const RAPIDAPI_HOST=config.rapidapi.host;const COBALT_API_URL=config.cobalt.apiUrl;const API_TIMEOUT=config.api.timeout;// Create axios instances\nconst openaiApi=axios.create({baseURL:OPENAI_API_URL,timeout:API_TIMEOUT,headers:{'Authorization':`Bearer ${OPENAI_API_KEY}`,'Content-Type':'application/json'}});const rapidApi=axios.create({timeout:API_TIMEOUT,headers:{'X-RapidAPI-Key':RAPIDAPI_KEY,'X-RapidAPI-Host':RAPIDAPI_HOST}});const cobaltApi=axios.create({baseURL:COBALT_API,timeout:API_TIMEOUT,headers:{'Content-Type':'application/json','Accept':'application/json'}});// Video Download Functions\nexport const downloadVideo=async(url,platform)=>{try{let downloadUrl;switch(platform){case'youtube':downloadUrl=await downloadFromYoutube(url);break;case'instagram':case'tiktok':downloadUrl=await downloadFromCobalt(url);break;default:throw new Error('Plataforma não suportada');}// Download the actual file\nconst response=await axios.get(downloadUrl,{responseType:'blob',timeout:API_TIMEOUT});return response.data;}catch(error){console.error('Erro no download do vídeo:',error);throw new Error(`Falha no download: ${error.message}`);}};const downloadFromYoutube=async url=>{try{const response=await rapidApi.get('/dl',{params:{id:extractVideoId(url)}});if(response.data&&response.data.link){return response.data.link;}throw new Error('URL de download não encontrada');}catch(error){throw new Error(`Erro no download do YouTube: ${error.message}`);}};const downloadFromCobalt=async url=>{try{const response=await cobaltApi.post('',{url:url,vCodec:'h264',vQuality:'720',aFormat:'mp3',isAudioOnly:false});if(response.data&&response.data.url){return response.data.url;}throw new Error('URL de download não encontrada');}catch(error){throw new Error(`Erro no download via Cobalt: ${error.message}`);}};// Transcription Functions\nexport const transcribeAudio=async function(audioFile){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};try{const formData=new FormData();formData.append('file',audioFile);formData.append('model',options.model||'whisper-1');if(options.language){formData.append('language',options.language);}if(options.prompt){formData.append('prompt',options.prompt);}const response=await openaiApi.post('/audio/transcriptions',formData,{headers:{'Content-Type':'multipart/form-data'}});return{text:response.data.text,language:response.data.language||options.language,duration:response.data.duration};}catch(error){console.error('Erro na transcrição:',error);throw new Error(`Falha na transcrição: ${error.message}`);}};// Utility Functions\nconst extractVideoId=url=>{const regex=/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;const match=url.match(regex);return match?match[1]:null;};export const validateVideoUrl=url=>{const patterns={youtube:/(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)/,instagram:/(?:instagram\\.com\\/(?:p|reel|tv)\\/)/,tiktok:/(?:tiktok\\.com\\/@[^\\/]+\\/video\\/|vm\\.tiktok\\.com\\/)/};for(const[platform,pattern]of Object.entries(patterns)){if(pattern.test(url)){return platform;}}return null;};// File Processing\nexport const convertToAudio=async videoBlob=>{return new Promise((resolve,reject)=>{const audio=document.createElement('audio');const url=URL.createObjectURL(videoBlob);audio.src=url;audio.addEventListener('loadedmetadata',()=>{// For now, we'll return the original blob\n// In a real implementation, you might want to use FFmpeg.js\nresolve(videoBlob);URL.revokeObjectURL(url);});audio.addEventListener('error',()=>{reject(new Error('Erro ao processar o arquivo de áudio'));URL.revokeObjectURL(url);});});};// Error Handling\nexport const handleApiError=error=>{if(error.response){var _error$response$data;// Server responded with error status\nconst status=error.response.status;const message=((_error$response$data=error.response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)||error.message;switch(status){case 401:return'Chave de API inválida ou expirada';case 403:return'Acesso negado. Verifique suas permissões';case 429:return'Limite de requisições excedido. Tente novamente mais tarde';case 500:return'Erro interno do servidor';default:return`Erro ${status}: ${message}`;}}else if(error.request){// Network error\nreturn'Erro de conexão. Verifique sua internet';}else{// Other error\nreturn error.message||'Erro desconhecido';}};","map":{"version":3,"names":["axios","config","OPENAI_API_KEY","openai","apiKey","OPENAI_API_URL","baseUrl","RAPIDAPI_KEY","rapidapi","key","RAPIDAPI_HOST","host","COBALT_API_URL","cobalt","apiUrl","API_TIMEOUT","api","timeout","openaiApi","create","baseURL","headers","rapidApi","cobaltApi","COBALT_API","downloadVideo","url","platform","downloadUrl","downloadFromYoutube","downloadFromCobalt","Error","response","get","responseType","data","error","console","message","params","id","extractVideoId","link","post","vCodec","vQuality","aFormat","isAudioOnly","transcribeAudio","audioFile","options","arguments","length","undefined","formData","FormData","append","model","language","prompt","text","duration","regex","match","validateVideoUrl","patterns","youtube","instagram","tiktok","pattern","Object","entries","test","convertToAudio","videoBlob","Promise","resolve","reject","audio","document","createElement","URL","createObjectURL","src","addEventListener","revokeObjectURL","handleApiError","_error$response$data","status","request"],"sources":["C:/Users/Afonso/Desktop/Transkipta/frontend/src/services/apiService.js"],"sourcesContent":["import axios from 'axios';\nimport config from '../config/env';\n\n// Configurações das APIs\nconst OPENAI_API_KEY = config.openai.apiKey;\nconst OPENAI_API_URL = config.openai.baseUrl;\nconst RAPIDAPI_KEY = config.rapidapi.key;\nconst RAPIDAPI_HOST = config.rapidapi.host;\nconst COBALT_API_URL = config.cobalt.apiUrl;\nconst API_TIMEOUT = config.api.timeout;\n\n// Create axios instances\nconst openaiApi = axios.create({\n  baseURL: OPENAI_API_URL,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Authorization': `Bearer ${OPENAI_API_KEY}`,\n    'Content-Type': 'application/json'\n  }\n});\n\nconst rapidApi = axios.create({\n  timeout: API_TIMEOUT,\n  headers: {\n    'X-RapidAPI-Key': RAPIDAPI_KEY,\n    'X-RapidAPI-Host': RAPIDAPI_HOST\n  }\n});\n\nconst cobaltApi = axios.create({\n  baseURL: COBALT_API,\n  timeout: API_TIMEOUT,\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Video Download Functions\nexport const downloadVideo = async (url, platform) => {\n  try {\n    let downloadUrl;\n    \n    switch (platform) {\n      case 'youtube':\n        downloadUrl = await downloadFromYoutube(url);\n        break;\n      case 'instagram':\n      case 'tiktok':\n        downloadUrl = await downloadFromCobalt(url);\n        break;\n      default:\n        throw new Error('Plataforma não suportada');\n    }\n    \n    // Download the actual file\n    const response = await axios.get(downloadUrl, {\n      responseType: 'blob',\n      timeout: API_TIMEOUT\n    });\n    \n    return response.data;\n  } catch (error) {\n    console.error('Erro no download do vídeo:', error);\n    throw new Error(`Falha no download: ${error.message}`);\n  }\n};\n\nconst downloadFromYoutube = async (url) => {\n  try {\n    const response = await rapidApi.get('/dl', {\n      params: {\n        id: extractVideoId(url)\n      }\n    });\n    \n    if (response.data && response.data.link) {\n      return response.data.link;\n    }\n    throw new Error('URL de download não encontrada');\n  } catch (error) {\n    throw new Error(`Erro no download do YouTube: ${error.message}`);\n  }\n};\n\nconst downloadFromCobalt = async (url) => {\n  try {\n    const response = await cobaltApi.post('', {\n      url: url,\n      vCodec: 'h264',\n      vQuality: '720',\n      aFormat: 'mp3',\n      isAudioOnly: false\n    });\n    \n    if (response.data && response.data.url) {\n      return response.data.url;\n    }\n    throw new Error('URL de download não encontrada');\n  } catch (error) {\n    throw new Error(`Erro no download via Cobalt: ${error.message}`);\n  }\n};\n\n// Transcription Functions\nexport const transcribeAudio = async (audioFile, options = {}) => {\n  try {\n    const formData = new FormData();\n    formData.append('file', audioFile);\n    formData.append('model', options.model || 'whisper-1');\n    \n    if (options.language) {\n      formData.append('language', options.language);\n    }\n    \n    if (options.prompt) {\n      formData.append('prompt', options.prompt);\n    }\n    \n    const response = await openaiApi.post('/audio/transcriptions', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    \n    return {\n      text: response.data.text,\n      language: response.data.language || options.language,\n      duration: response.data.duration\n    };\n  } catch (error) {\n    console.error('Erro na transcrição:', error);\n    throw new Error(`Falha na transcrição: ${error.message}`);\n  }\n};\n\n// Utility Functions\nconst extractVideoId = (url) => {\n  const regex = /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)([^\"&?\\/\\s]{11})/;\n  const match = url.match(regex);\n  return match ? match[1] : null;\n};\n\nexport const validateVideoUrl = (url) => {\n  const patterns = {\n    youtube: /(?:youtube\\.com\\/(?:[^\\/]+\\/.+\\/|(?:v|e(?:mbed)?)\\/|.*[?&]v=)|youtu\\.be\\/)/,\n    instagram: /(?:instagram\\.com\\/(?:p|reel|tv)\\/)/,\n    tiktok: /(?:tiktok\\.com\\/@[^\\/]+\\/video\\/|vm\\.tiktok\\.com\\/)/\n  };\n  \n  for (const [platform, pattern] of Object.entries(patterns)) {\n    if (pattern.test(url)) {\n      return platform;\n    }\n  }\n  \n  return null;\n};\n\n// File Processing\nexport const convertToAudio = async (videoBlob) => {\n  return new Promise((resolve, reject) => {\n    const audio = document.createElement('audio');\n    const url = URL.createObjectURL(videoBlob);\n    \n    audio.src = url;\n    audio.addEventListener('loadedmetadata', () => {\n      // For now, we'll return the original blob\n      // In a real implementation, you might want to use FFmpeg.js\n      resolve(videoBlob);\n      URL.revokeObjectURL(url);\n    });\n    \n    audio.addEventListener('error', () => {\n      reject(new Error('Erro ao processar o arquivo de áudio'));\n      URL.revokeObjectURL(url);\n    });\n  });\n};\n\n// Error Handling\nexport const handleApiError = (error) => {\n  if (error.response) {\n    // Server responded with error status\n    const status = error.response.status;\n    const message = error.response.data?.message || error.message;\n    \n    switch (status) {\n      case 401:\n        return 'Chave de API inválida ou expirada';\n      case 403:\n        return 'Acesso negado. Verifique suas permissões';\n      case 429:\n        return 'Limite de requisições excedido. Tente novamente mais tarde';\n      case 500:\n        return 'Erro interno do servidor';\n      default:\n        return `Erro ${status}: ${message}`;\n    }\n  } else if (error.request) {\n    // Network error\n    return 'Erro de conexão. Verifique sua internet';\n  } else {\n    // Other error\n    return error.message || 'Erro desconhecido';\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}