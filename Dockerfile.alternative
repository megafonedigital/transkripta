# Build stage
FROM node:18-alpine as build

# Install git for potential git dependencies
RUN apk add --no-cache git

WORKDIR /app

# Copy package files first for better caching
COPY package*.json ./

# Clear npm cache and install dependencies with retries
RUN npm cache clean --force
RUN npm config set registry https://registry.npmjs.org/
RUN npm install --silent --no-optional || npm install --silent --no-optional || npm install --silent

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage
FROM nginx:alpine as production

# Copy custom nginx config
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application
COPY --from=build /app/build /usr/share/nginx/html

# Copy env-config script
COPY --from=build /app/public/env-config.js /usr/share/nginx/html/

# Expose port
EXPOSE 80

# Start nginx
CMD ["nginx", "-g", "daemon off;"]