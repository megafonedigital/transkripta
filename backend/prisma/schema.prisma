// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            String          @id @default(uuid())
  username      String          @unique
  password      String
  openaiApiKey  String?
  useCustomKey  Boolean        @default(false)
  transcriptions Transcription[]
  systemLogs    SystemLog[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Transcription {
  id          String   @id @default(uuid())
  title       String
  content     String
  type        String
  outputFormat String  @default("plain")
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Metrics
  fileSize        Int?      // Size in bytes
  duration        Float?    // Duration in seconds
  processingTime  Float?    // Time taken to process in seconds
  characterCount  Int?      // Number of characters in transcription
  wordCount       Int?      // Number of words in transcription
  tokenCount      Int?      // Number of tokens used by Whisper
  costUsd         Float?    // Cost in USD
  costBrl         Float?    // Cost in BRL
  isDeleted       Boolean   @default(false) // Soft delete flag
}

model SystemLog {
  id          String   @id @default(uuid())
  timestamp   DateTime @default(now())
  level       String   // 'info', 'warning', 'error'
  message     String
  details     String?  // JSON string with additional details
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  route       String?  // API route that generated the log
  method      String?  // HTTP method
  statusCode  Int?     // HTTP status code
} 